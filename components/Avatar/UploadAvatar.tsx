"use client";

import Image from "next/image";
import { useSession } from "next-auth/react";
import { useState } from "react";
import { useRouter } from "next/navigation";

import { useUploadUrl } from "../../hooks/useUploadUrl";
import AppLoader from "@components/Loader/Loader";

export default function UploadAvatar() {
  const { update } = useSession();
  const [uploadedUrl, setUploadedUrl] = useState<string | null>(null);
  const [fileSelected, setFileSelected] = useState(false);

  const router = useRouter();

  const {
    preview,
    loading,
    handleChange: originalHandleChange,
    handleUpload,
  } = useUploadUrl({
    uploadEndpoint: "/api/upload-avatar",
    onSuccess: async (secureUrl) => {
      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ URL –≤ –±–∞–∑—É
      const updateRes = await fetch("/api/update-avatar", {
        method: "POST",
        body: JSON.stringify({ image: secureUrl }),
        headers: {
          "Content-Type": "application/json",
        },
      });

      if (!updateRes.ok) throw new Error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é");

      await update(); // –æ–Ω–æ–≤–ª—é—î–º–æ —Å–µ—Å—ñ—é –∑ —Å–µ—Ä–≤–µ—Ä–∞
      router.refresh(); // –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É, —â–æ–± –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ –Ω–æ–≤—É –∞–≤–∞—Ç–∞—Ä–∫—É
      setUploadedUrl(secureUrl);
      setFileSelected(false); // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É

      // üîΩ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø—Ä–∏—Ö–æ–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
      setTimeout(() => setUploadedUrl(null), 3000);
    },
    onError: (err) => {
      console.error("Upload error:", err);
    },
  });

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files.length > 0) {
      setFileSelected(true);
      originalHandleChange(e);
    }
  };

  return (
    <div className="flex flex-col items-center gap-4">
      {/* –í–∏–±—Ä–∞—Ç–∏ —Ñ–∞–π–ª */}
      <label
        className={`inline-block px-4 py-2 rounded text-white transition ${
          loading || fileSelected
            ? "bg-gray-300 text-gray-500 cursor-not-allowed"
            : "bg-blue-600 hover:bg-blue-700 cursor-pointer"
        }`}
      >
        –í–∏–±—Ä–∞—Ç–∏ —Ñ–∞–π–ª
        <input
          type="file"
          accept="image/*"
          className="hidden"
          onChange={handleFileChange}
          disabled={loading || fileSelected}
        />
      </label>

      {/* –ü—Ä–µ–≤‚Äô—é */}
      {preview && (
        <Image
          src={preview}
          alt="Preview"
          className="w-32 h-32 rounded-full object-cover"
          width={128}
          height={128}
        />
      )}

      {/* –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ */}
      <button
        onClick={handleUpload}
        disabled={!fileSelected || loading}
        className={`px-4 py-2 rounded text-white transition ${
          !fileSelected || loading
            ? "bg-gray-300 text-gray-500 cursor-not-allowed"
            : "bg-green-600 hover:bg-green-700"
        }`}
      >
        {loading ? "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è..." : "–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏"}
      </button>

      {/* –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è */}
      {uploadedUrl && (
        <p className="text-green-600 text-sm">–§–æ—Ç–æ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!</p>
      )}
    </div>
  );
}
